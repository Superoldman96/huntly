name: Docker Build on Self-hosted Runner

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: self-hosted
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Node.js version
        id: node-check
        run: |
          if node --version | grep -q "v18.12.1"; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Set Node.js
        if: steps.node-check.outputs.skip != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: "18.12.1"
          cache: "yarn"
          cache-dependency-path: "app/client/yarn.lock"
      
      - name: Check Yarn version
        id: yarn-check
        run: |
          if yarn --version | grep -q "1.22.19"; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Setup yarn
        if: steps.yarn-check.outputs.skip != 'true'
        run: npm install -g yarn --version 1.22.19

      - name: Install client dependencies
        run: |
          cd app/client
          yarn install

      - name: Check Java version
        id: java-check
        run: |
          if java -version 2>&1 | grep -q "11\."; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Set up JDK 11
        if: steps.java-check.outputs.skip != 'true'
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Install Maven
        run: |
          if ! command -v mvn &> /dev/null; then
            brew install maven
          fi

      - name: Cache maven dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-dependencies
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: |
          cd app/server
          mvn clean package
        env:
          CI: false

      - name: Tag current image as previous
        run: |
          docker tag lcomplete/huntly:latest lcomplete/huntly:previous || true
        continue-on-error: true

      - name: Build Docker image
        run: |
          docker build -t lcomplete/huntly:latest .

      - name: Clean up old huntly images
        run: |
          # 保留 latest 和 previous，删除其他 huntly 镜像
          docker images lcomplete/huntly --format "table {{.Repository}}:{{.Tag}}" | grep -v "latest\|previous\|REPOSITORY" | xargs -r docker rmi || true
        continue-on-error: true

      - name: Ensure data directory exists
        run: |
          mkdir -p /data/huntly

      - name: Restart service with Docker Compose
        run: |
          docker compose down || true
          docker compose up -d